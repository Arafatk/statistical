#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'
require 'erb'
gem_base = File.expand_path(File.dirname(__FILE__) + '/..')
require gem_base + '/lib/statistical'

class String
  def camelcase
    self.split('_').map(&:capitalize).join
  end
end

needs_new = false
parameters = ''
OptionParser.new do |opts|
  opts.banner = 'Usage: distribution [--new] [--params parameters] distribution_name'
  opts.on('-n', '--new', 'Create a new template for distribution') do
    needs_new = true
  end
  opts.on('-PMANDATORY', '--params MANDATORY', String, 'Parameters for distribution') do |n_param|
    parameters = ", #{n_param}"
  end

  opts.on('-h', '--help', 'Show this message') do
    puts opts
    exit
  end

  begin
    ARGV << '-h' if ARGV.empty?
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    STDERR.puts e.message, "\n", opts
    exit(-1)
  end
end

ARGV.each do |distribution|
  if needs_new
    basename = distribution.downcase
    raise 'You should be inside distribution lib directory' unless File.exist? 'statistical.gemspec'
    raise 'Distribution already created' if File.exist? "#{gem_base}/lib/statistical/distribution/#{basename}.rb" and File.exist? "#{gem_base}/lib/statistical/rng/#{basename}.rb"

    dist = ERB.new(File.read(gem_base + '/data/template/distribution.erb'))
    rng = ERB.new(File.read(gem_base + '/data/template/rng.erb'))
    spec = ERB.new(File.read(gem_base + '/data/template/spec.erb'))

    File.open("#{gem_base}/lib/statistical/distribution/#{basename}.rb", 'w') { |fp| fp.write(dist.result(binding)) }
    File.open("#{gem_base}/lib/statistical/rng/#{basename}.rb", 'w') { |fp| fp.write(rng.result(binding)) }
    File.open("#{gem_base}/spec/#{basename}_spec.rb", 'w') { |fp| fp.write(spec.result(binding)) }
  end
end